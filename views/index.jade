extends layout

block content
  script.
    $(document).ready(function(){
      $('.datetimepicker').datetimepicker({
        icons: {
          time: 'fa fa-clock-o',
          date: 'fa fa-calendar',
          up: 'fa fa-arrow-up',
          down: 'fa fa-arrow-down',
          previous: 'fa fa-arrow-left',
          next: 'fa fa-arrow-right',
          clear: 'fa fa-trash',
          today: 'fa fa-crosshairs'
        },
        showTodayButton: true,
        showClear: true,
        format: 'Do MMMM YYYY - HH:mm:ss'
      }); 
      $("#minDate").on("dp.change", function (e) {
        $('#maxDate').data("DateTimePicker").minDate(e.date);
        //update_url();
      });
      $("#maxDate").on("dp.change", function (e) {
        $('#minDate').data("DateTimePicker").maxDate(e.date);
        //update_url();
      });
      $(".priceSelect").click(function(e){
        e.preventDefault();
        $("#btnPrice").text($(this).text());
        $("#btnPrice").attr('name', $(this).attr('name'));
        //update_url();
      });
      $(".volumeSelect").click(function(e){
        e.preventDefault();
        $("#btnVolume").text($(this).text());
        $("#btnVolume").attr('name', $(this).attr('name'));
        //update_url();
      });
      $('#apply').click(function(e){
        e.preventDefault();
        var sdate = moment($('#minDateInput').val(), 'Do MMMM YYYY  - HH:mm:ss').valueOf();
        var edate = moment($('#maxDateInput').val(), 'Do MMMM YYYY  - HH:mm:ss').valueOf();
        location.href = '/' + $("#btnPrice").attr('name') + '/' + $("#btnVolume").attr('name') + '/' + sdate + '/' + edate;
      });
      var data = {
        labels: [],
        datasets: [{
            type: 'line',
            label: "Weighted Price (μBTC)",
            borderColor: "rgba(0,191,255,0.8)",
            backgroundColor: "rgba(0,191,255,0.0)",
            pointBorderColor: "rgba(0,191,255,0.8)",
            pointBackgroundColor: "rgba(0,191,255,0.8)",
            pointBorderWidth: 1,
            yAxisID: "y-axis-1",
            data: []
        }, {
            label: "Daily Volume (FLO)",
            borderColor: "rgba(34,34,34,0.2)",
            borderWidth: 2,
            backgroundColor: "rgba(34,34,34,0.1)",
            yAxisID: "y-axis-2",
            data: []
        }]
      };

      function update_chartdata(){
        var minDate = '#{minDate}';
        var maxDate = '#{maxDate}';
        console.log(minDate);
        $.ajax({url: '/api/marketchartdata', success: function(flo){
          flo = flo.reverse();
          for ( var i=0; i < flo.length; i++) {
            if (minDate < 0 || minDate < flo[i]['alexandria-history-record-datapoint'].timestamp * 1000) {
              if (maxDate < 0 || (maxDate / 1000) > flo[i]['alexandria-history-record-datapoint'].timestamp) {
                data.labels.push(moment(flo[i]['alexandria-history-record-datapoint'].timestamp * 1000).format('Do MMMM YYYY - HH:mm:ss'));
                if ('#{price}' === 'usd') { 
                  data.datasets[0].label = 'USD (Cents)';
                  data.datasets[0].data.push(flo[i]['alexandria-history-record-datapoint'].USD * 100);
                  $("#btnPrice").text('USD (Cents)');
                  $("#btnPrice").attr('name', 'usd');
                } else {
                  data.datasets[0].label = 'Weighted (μBTC)';
                  data.datasets[0].data.push((flo[i]['alexandria-history-record-datapoint'].weighted * 1000000).toFixed(2));
                }
                if ('#{volume}' === 'bittrex') {
                  data.datasets[1].label = 'Bittrex (BTC)';
                  data.datasets[1].data.push(flo[i]['alexandria-history-record-datapoint'].bittrex);
                  $("#btnVolume").text('Bittrex (BTC)');
                  $("#btnVolume").attr('name', 'bittrex');
                } else if ('#{volume}' === 'cryptsy') {
                  data.datasets[1].label = 'Crypsty (BTC)';
                  data.datasets[1].data.push(flo[i]['alexandria-history-record-datapoint'].cryptsy);
                  $("#btnVolume").text('Cryptsy (BTC)');
                  $("#btnVolume").attr('name', 'cryptsy');
                } else if ('#{volume}' === 'poloniex') {
                  data.datasets[1].label = 'Poloniex (BTC)';
                  data.datasets[1].data.push(flo[i]['alexandria-history-record-datapoint'].poloniex);
                  $("#btnVolume").text('Poloniex (BTC)');
                  $("#btnVolume").attr('name', 'poloniex');
                } else {
                  data.datasets[1].label = 'Daily Volume (FLO)';
                  data.datasets[1].data.push(parseFloat(flo[i]['alexandria-history-record-datapoint']['daily-volume']));
                }
              }
            }
          }
          var ctx = document.getElementById("floMarketData").getContext("2d");
          var lineChart = new Chart(ctx, {
            type: 'bar',
            data: data,
            options: {
              responsive: true,
              hoverMode: 'label',
              scales: {
                xAxes: [{
                  display: false,
                  gridLines: {
                    offsetGridLines: false
                  }
                }],
                yAxes: [{
                  type: "linear", // only linear but allow scale type registration. This allows extensions to exist solely for log scale for instance
                  display: true,
                  position: "left",
                  id: "y-axis-1",
                  stacked: false
                }, {
                  type: "linear", // only linear but allow scale type registration. This allows extensions to exist solely for log scale for instance
                  display: true,
                  stacked: false,
                  position: "right",
                  id: "y-axis-2",
                  // grid line settings
                  gridLines: {
                    drawOnChartArea: false, // only want the grid lines for one axis to show up
                  }
                }],
              },
            } 
          }); 
        }});
      };
      update_chartdata();  
    });
  .col-md-10
    .container-canvas
      canvas#floMarketData
  .col-md-2
    //form(method='post', action='/')
    .panel.panel-default(style='margin-top:20px;')
      .panel-heading
        span.fa.fa-line-chart.icon-left
        strong Chart
      .panel-body
        .row(style='padding:0 15px;')
          | Price:
          .btn-group.btn-block(style='margin-bottom:15px;')
            button#btnPrice.col-sm-10.btn.btn-primary(type='button', name='btc') Weighted (μBTC)    
            button.col-sm-2.btn.btn-primary.dropdown-toggle(type='button', data-toggle='dropdown', aria-expanded='false')
              span.caret
            ul.dropdown-menu.multi-column(role='menu')
              li
                a.priceSelect(href='#', name='btc') Weighted (μBTC)
              li
                a.priceSelect(href='#', name='usd') USD (Cents)
        .row(style='padding:0 15px;')
          | Volume:
          .btn-group.btn-block(style='margin-bottom:15px;')
            button#btnVolume.col-sm-10.btn.btn-primary(type='button', name='daily') Daily Volume (FLO)    
            button.col-sm-2.btn.btn-primary.dropdown-toggle(type='button', data-toggle='dropdown', aria-expanded='false')
              span.caret
            ul.dropdown-menu.multi-column(role='menu')
              li
                a.volumeSelect(href='#', name='daily') Daily Volume (FLO)
              li
                a.volumeSelect(href='#', name='bittrex') Bittrex (BTC)
              li
                a.volumeSelect(href='#', name='cryptsy') Cryptsy (BTC)
              li
                a.volumeSelect(href='#', name='poloniex') Poloniex (BTC)
        | Start Date:
        .form-group
          #minDate.datetimepicker.input-group.date
            input#minDateInput.form-control(type='text', name='minDateInput')
            span.input-group-addon(style='min-width:20px;')
              span.fa.fa-calendar
        
        | End Date:
        .form-group
          #maxDate.datetimepicker.input-group.date
            input#maxDateInput.form-control(type='text', name='maxDateInput')
            span.input-group-addon(style='min-width:20px;')
              span.fa.fa-calendar  
      .panel-footer.text-right
        //button.btn.btn-default(type='submit') Apply
        a#apply.btn.btn-primary(href='#') Apply
    
