extends layout

block content
  script.
    $(document).ready(function(){
      $('#apply').on('click', function (e) {
        e.preventDefault();
      });
      $('.datetimepicker').datetimepicker({
        icons: {
          time: 'fa fa-clock-o',
          date: 'fa fa-calendar',
          up: 'fa fa-arrow-up',
          down: 'fa fa-arrow-down',
          previous: 'fa fa-arrow-left',
          next: 'fa fa-arrow-right',
          clear: 'fa fa-trash',
          today: 'fa fa-crosshairs'
        },
        showTodayButton: true,
        showClear: true,
        format: 'Do MMMM YYYY - HH:mm:ss'
      }); 
      $("#minDate").on("dp.change", function (e) {
        $('#maxDate').data("DateTimePicker").minDate(e.date);
      });
      $("#maxDate").on("dp.change", function (e) {
        $('#minDate').data("DateTimePicker").maxDate(e.date);
      });
      Chart.defaults.global.responsive = true;
      function update_chart(){
        var minDate = moment('#{minDate}', 'Do MMMM YYYY  - HH:mm:ss').valueOf();
        var maxDate = moment('#{maxDate}', 'Do MMMM YYYY  - HH:mm:ss').valueOf();
        console.log(minDate);
        $.ajax({url: '/api/bitcoinchartdata', success: function(flo){
          flo = flo.reverse();
          for ( var i=0; i < flo.length; i++) {
            if (minDate < 0 || minDate < flo[i]['alexandria-history-record-datapoint'].timestamp * 1000) {
              if (maxDate < 0 || (maxDate / 1000) > flo[i]['alexandria-history-record-datapoint'].timestamp) {
                data.labels.push(moment(flo[i]['alexandria-history-record-datapoint'].timestamp * 1000).format('Do MMMM YYYY - HH:mm:ss'));
                data.datasets[0].data.push(flo[i]['alexandria-history-record-datapoint'].last);
                data.datasets[2].data.push(flo[i]['alexandria-history-record-datapoint'].bid);
                data.datasets[3].data.push(flo[i]['alexandria-history-record-datapoint'].ask);
                data.datasets[4].data.push(flo[i]['alexandria-history-record-datapoint']['24h_avg']);
                data.datasets[1].data.push(parseFloat(flo[i]['alexandria-history-record-datapoint']['volume_btc']));
              }
            }
          }
          var ctx = document.getElementById("floMarketData").getContext("2d");
          var lineChart = new Chart(ctx, {
            type: 'bar',
            data: data,
            options: {
              responsive: true,
              hoverMode: 'label',
              stacked: false,
              scales: {
                xAxes: [{
                  display: false,
                  gridLines: {
                    offsetGridLines: false
                  }
                }],
                yAxes: [{
                  type: "linear", // only linear but allow scale type registration. This allows extensions to exist solely for log scale for instance
                  display: true,
                  position: "left",
                  id: "y-axis-1",
                }, {
                  type: "linear", // only linear but allow scale type registration. This allows extensions to exist solely for log scale for instance
                  display: true,
                  position: "right",
                  id: "y-axis-2",
                  // grid line settings
                  gridLines: {
                    drawOnChartArea: false, // only want the grid lines for one axis to show up
                  }
                }],
              },
            } 
          });
        }});  
      };  
      var data = {
        labels: [],
        datasets: [{
            type: 'line',
            label: "BTC/USD",
            borderColor: "rgba(0,191,255,0.8)",
            backgroundColor: "rgba(0,128,0,0.0)",
            pointBorderColor: "rgba(0,191,255,0.8)",
            pointBackgroundColor: "rgba(0,191,255,0.8)",
            pointBorderWidth: 1,
            yAxisID: "y-axis-1",
            data: []
        }, {
            label: "Volume (BTC)",
            borderColor: "rgba(34,34,34,0.2)",
            borderWidth: 2,
            backgroundColor: "rgba(34,34,34,0.1)",
            yAxisID: "y-axis-2",
            data: []
        }, {
            type: 'line',
            label: "Bid",
            borderColor: "rgba(0,0,0,0.0)",
            backgroundColor: "rgba(0,0,0,0.0)",
            pointBorderColor: "rgba(0,0,0,0.0)",
            pointBackgroundColor: "rgba(0,0,0,0.0)",
            pointBorderWidth: 1,
            yAxisID: "y-axis-1",
            data: []
        }, {
            type: 'line',
            label: "Ask",
            borderColor: "rgba(0,0,0,0.0)",
            backgroundColor: "rgba(0,0,0,0.0)",
            pointBorderColor: "rgba(0,0,0,0.0)",
            pointBackgroundColor: "rgba(0,0,0,0.0)",
            pointBorderWidth: 1,
            yAxisID: "y-axis-1",
            data: []
        }, {
            type: 'line',
            label: "24h Avg",
            borderColor: "rgba(0,0,0,0.0)",
            backgroundColor: "rgba(0,0,0,0.0)",
            pointBorderColor: "rgba(0,0,0,0.0)",
            pointBackgroundColor: "rgba(0,0,0,0.0)",
            pointBorderWidth: 1,
            yAxisID: "y-axis-1",
            data: []
        }]
      };

      update_chart();
    });
  .col-md-10
    .container-canvas
      canvas#floMarketData
  .col-md-2
    .panel.panel-default(style='margin-top:20px;')
      .panel-heading
        strong Legend
      .panel-body
        ul.line-legend
          li
            span(style='background-color:rgba(0,191,255,0.8);')
            | USD ($)
          li 
            span(style='background-color:rgba(90,90,90,0.8);')
            | Volume (BTC)
    form(method='post', action='/bitcoin')
      .panel.panel-default(style='margin-top:20px;')
        .panel-heading
          strong Filter
        .panel-body
          | Start Date:
          .form-group
            #minDate.datetimepicker.input-group.date
              input#minDateInput.form-control(type='text', name='minDateInput')
              span.input-group-addon(style='min-width:20px;')
                span.fa.fa-calendar
          
          | End Date:
          .form-group
            #maxDate.datetimepicker.input-group.date
              input#maxDateInput.form-control(type='text', name='maxDateInput')
              span.input-group-addon(style='min-width:20px;')
                span.fa.fa-calendar  
        .panel-footer.text-right
          button.btn.btn-default(type='submit') Apply
    
